---
title: "1 - Inspection of HCA seurat object"
format:
  html:
    toc: true
jupyter:
  kernel: python3
fig-show: hold
execute:
  eval: false
author: Alba Mendez Alejandre
date: 02-2025
---

# Import libraries
```{r}

.libPaths("/home/albax/miniforge3/envs/seurat_v4/lib/R/library")

if(.Platform$OS.type == "linux") Sys.setenv(PATH= paste("/home/albax/miniforge3/envs/seurat_v4/lib",Sys.getenv()["PATH"],sep=";"))

library(reticulate)

use_condaenv("/home/albax/miniforge3/envs/seurat_v4", required = TRUE)
py_config()

import("numpy")
import("leidenalg")
import("pandas")

library(Seurat) 
library(dplyr) 
library(ggplot2) 
library(plotly) 
library(SingleCellExperiment) 
# library(httpgd) 
library(patchwork)
library(dplyr)
library(tidyverse)
library(tibble)

color.list <- RColorBrewer::brewer.pal(12,"Paired")
color.list <- c(color.list,RColorBrewer::brewer.pal(12,"Set3"))

# Palette from orange to violet
palette <- scale_color_viridis_c(option = "plasma", direction = -1) # continue colors palette
palette_d <- scale_color_viridis_d(option = "turbo", direction = -1) # discrete colors palette

projectPath <- setwd("/home/albax/human_esophagus") # where we are

```


# Load rds object

```{r}
# hca_esoph <- readRDS(file = "./data/hca_esoph_with_annotations.rds")
# hca_esoph <- UpdateSeuratObject(hca_esoph)
# hca_esoph

# hca_esoph_com <- readRDS(file = "./data/myesoph_norm_dim.rds")
# hca_esoph_com

my_esoph <- readRDS("./data/hca_myesoph.rds")
my_esoph

```



# Viewing barcodes of potential artifacts in UMAP
While doing the heatmap clustering analysis, we found that donor 296C has a very strange pattern, with more than 100 clones in a single cluster (cluster 30 with cognate True), also it only has 5 clusters... Why is this happening?

To answer that question, we thought that maybe Malat1 was highly present in the cells of those clones...

```{r}
# load CB_seurat barcodes from cluster30
cbs_lista <- read.table("/home/albax/dario_TFM/singlecell/seurat/cluster30_CBs")

```

```{r}
DimPlot(hca_esoph, cells.highlight=cbs_lista$V1)

```


## MALAT1

As shown in https://www.biorxiv.org/content/10.1101/2024.07.14.603469v2 and https://bmcgenomics.biomedcentral.com/articles/10.1186/s12864-024-11015-5 , low levels of MALAT1 might indicate empty droplets or poor quality cells, as it is a nuclear marker, so its absence indicates cells lacking a nucleus. Therefore, low expression of MALAT1 might indicate low-quality cells. 

mirar la distribución de Malat1 (violinplot o density plot) y en paralelo la de nCount y % de intronic counts...
Para esto último, dicen que ellos usan un paquete de R llamado DropletQC... to remove empty droplets based on intronic content, pero que básicamente mira:
- intronic proportion in each cell from bam file.
- threshold on empty droplet detected cells.
- detect damaged cells.
Pero que de todas formas al haber implementado RNA velocity, segruamente no necesitemos ni aplicarlo, que basta con mirar la distribución del % de nCount_unspliced y en este caso parece bastante claro que esas células están dañadas y se pueden quitar....
De todas formas, para lo que a nosotros nos interesa, a estas alturas de la película creo que se queda más como una cosa testimonial, para tener en cuenta de cara al futuro...



```{r}
FeaturePlot(my_esoph, features = c("MALAT1")) & scale_y_continuous(breaks = seq(0, 20, by = 2)) & palette

FeaturePlot(my_esoph, features = c("MALAT1"), split.by = "Donor") & scale_y_continuous(breaks = seq(0, 20, by = 2)) & palette

```

it doesn't look like there are low-quality cells in 296C...

# DE genes for these cells

```{r}
all_CBs <-colnames(hca_esoph)[hca_esoph@meta.data$Donor == "296C"]
rest_CBs <- setdiff(all_CBs, cbs_lista$V1)

hca_esoph <- SetIdent(hca_esoph, value = hca_esoph@meta.data$Donor)

```

```{r}
markers_CB <- FindMarkers(hca_esoph, ident.1 = cbs_lista$V1, ident.2 = rest_CBs) # from more expression to less in cbs_lista

```

```{r}
significant_genes <- markers_CB[markers_CB$p_val_adj < 0.05 & abs(markers_CB$avg_log2FC) < 0, ]
# log2FC > 0 means that the gene is more highly expressed in ident.1 (group 1) compared to ident.2 (group 2).

```
