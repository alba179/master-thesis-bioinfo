# 1. Inspection of HCA seurat object"
This is a scarce notebook with a couple analysis, just for visualization purposes. 


## Import libraries
```{r, }
#| fold: true
.libPaths("/home/albax/miniforge3/envs/seurat_v4/lib/R/library")

if(.Platform$OS.type == "linux") Sys.setenv(PATH= paste("/home/albax/miniforge3/envs/seurat_v4/lib",Sys.getenv()["PATH"],sep=";"))

library(reticulate)

use_condaenv("/home/albax/miniforge3/envs/seurat_v4", required = TRUE)
py_config()

import("numpy")
import("leidenalg")
import("pandas")

library(Seurat) 
library(dplyr) 
library(ggplot2) 
library(plotly) 
library(SingleCellExperiment) 
# library(httpgd) 
library(patchwork)
library(dplyr)
library(tidyverse)
library(tibble)

color.list <- RColorBrewer::brewer.pal(12,"Paired")
color.list <- c(color.list,RColorBrewer::brewer.pal(12,"Set3"))

# Palette from orange to violet
palette <- scale_color_viridis_c(option = "plasma", direction = -1) # continue colors palette
palette_d <- scale_color_viridis_d(option = "turbo", direction = -1) # discrete colors palette

projectPath <- setwd("/home/albax/human_esophagus") # where we are

```


## Load rds object

```{r}
my_esoph <- readRDS("./data/hca_myesoph.rds")
my_esoph

```


## 1.1. Possible artifacts 

### MALAT1

As shown in https://www.biorxiv.org/content/10.1101/2024.07.14.603469v2 and https://bmcgenomics.biomedcentral.com/articles/10.1186/s12864-024-11015-5 , low levels of MALAT1 might indicate empty droplets or poor quality cells, as it is a nuclear marker, so its absence indicates cells lacking a nucleus. Therefore, low expression of MALAT1 might indicate low-quality cells. The authors recommend to observe MALAT1 distribution (violinplot or density plot) and in parallel the nCount and % of intronic counts...

As RNA velocity has already been implemented, we don't need to apply all that, it is enough by looking at the distributioni of the % nCount_unspliced. 


```{r}
FeaturePlot(my_esoph, features = c("MALAT1")) & scale_y_continuous(breaks = seq(0, 20, by = 2)) & palette

FeaturePlot(my_esoph, features = c("MALAT1"), split.by = "Donor") & scale_y_continuous(breaks = seq(0, 20, by = 2)) & palette

```

it doesn't look like there are low-quality cells anywhere. 

## 1.2. DE genes for specific cells

```{r}
all_CBs <-colnames(hca_esoph)[hca_esoph@meta.data$Donor == "296C"]
rest_CBs <- setdiff(all_CBs, cbs_lista$V1)

hca_esoph <- SetIdent(hca_esoph, value = hca_esoph@meta.data$Donor)

```

```{r}
markers_CB <- FindMarkers(hca_esoph, ident.1 = cbs_lista$V1, ident.2 = rest_CBs) # from more expression to less in cbs_lista

```

```{r}
significant_genes <- markers_CB[markers_CB$p_val_adj < 0.05 & abs(markers_CB$avg_log2FC) < 0, ]
# log2FC > 0 means that the gene is more highly expressed in ident.1 (group 1) compared to ident.2 (group 2).

```

## 1.3. Save normalized counts matrix {#sec-save-norm-counts}

```{r}
# normalized matrix counts
norm_counts <- my_esoph[["RNA"]]@data # columns are cells and rows are genes, not sure if RNA has SCT ransformed counts

metadata <- my_esoph@meta.data # 68173 total cells
epi_cells <- rownames(metadata[grep("^Epi", metadata$Celltypes_updated_July_2020), ]) # 61214 epi cells
norm_counts_epi <- norm_counts[, epi_cells]

# Matrix::writeMM(norm_counts, file = "matrix_counts/hca_corrected_counts_matrix.mtx")
# Matrix::writeMM(norm_counts_epi, file = "matrix_counts/hca_corrected_counts_matrix_Epi.mtx")

cells_296C <- colnames(my_esoph)[my_esoph$Donor == "296C"] # matrix for only Donor = 296C
norm_counts_296 <- norm_counts[, cells_296C]

# Save the row names (gene names)
write.table(rownames(norm_counts), file = "matrix_counts/gene_names.txt", 
            row.names = FALSE, col.names = FALSE, quote = FALSE)

# Save the column names (cell names)
write.table(colnames(norm_counts), file = "matrix_counts/cell_names.txt", 
            row.names = FALSE, col.names = FALSE, quote = FALSE)

# Save the column names (cell names) that are only epithelial cells
write.table(colnames(norm_counts_296), file = "matrix_counts/cell_names_296C.txt", 
        row.names = FALSE, col.names = FALSE, quote = FALSE)   
```
